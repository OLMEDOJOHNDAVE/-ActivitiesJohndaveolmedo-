A. ENGAGE: Reflection
Misconception Check
How the OOP works in arrays, table, string and files manipulation?

Loop looks at every element in the array, tests each one, and exits the method when a match is found. Therefore, the only way the program can get to the line just after the loop is if none of the elements matched. Therefore, the code just after the loop only runs when no elements match. In this example, the "return -1;" will run in the case that none of the elements matched. arrays help keep data organized, and their real power comes through when you are able to write a little code that can go through every element in an array.

B. EXPLORE: other class and methods
1. List down the other class and methods of string, file, array and table.
String method charAt(),charCodeAt(),concat(),endsWith(),fromCharCode(),includes(),indexOf(),lastIndexOf(),localeCompare(),match(),repeat(),replace(),search(),slice(),split(),startsWith(),
String class 
Hello world



Array method 
 Clear, Copy(Array, Array, Int32), CopyTo(Array, Int32), GetLength, GetLongLength, GetLowerBound, GetType, GetUpperBound, GetValue(Int32), 
IndexOf(Array, Object), Reverse(Array), SetValue(Object, Int32), 
Sort(Array), ToString.
Array class 
IsFixedSize, IsReadOnly, Length, LongLength, Rank.
File method

public String getName(),  public String getParent(),  public File getParentFile(), public String getPath(),  public boolean isAbsolute(),public String getAbsolutePath(),  public boolean canRead(),  public boolean canWrite(),  public boolean exists(), public boolean isDirectory(),  public boolean isFile(),public long lastModified(),  public long length(),  public boolean createNewFile() throws IOException,  public boolean delete(),  public void deleteOnExit(),
public String[] list(),  public String[] list(FilenameFilter filter),  public File[] listFiles(),  

File class
File class represents the files and directory pathnames in an abstract manner. This class is used for creation of files and directories, file searching, file deletion, etc.

Table method
 addColumn(TableColumn aColumn)
addColumnSelectionInterval(int index0, int index1)

addNotify()
addRowSelectionInterval(int index0, int index1)

changeSelection(int rowIndex, int columnIndex, boolean toggle, boolean extend)

clearSelection()

columnAdded(TableColumnModelEvent e)
columnAtPoint(Point point)

columnMarginChanged(ChangeEvent e)

columnMoved(TableColumnModelEvent e)
columnRemoved(TableColumnModelEvent e)
columnSelectionChanged(ListSelectionEvent e)

configureEnclosingScrollPane()

convertColumnIndexToModel(int viewColumnIndex)

convertColumnIndexToView(int modelColumnIndex)

Table class
.active
.success
.info
.warning
.danger



D.ELABORATE: Coding
Write a java program that uses OOP technique:
1. Create another class and methods that returning a charAt() and indexOf() manipulated String.

public class Activity_String{
  public static void main(String[] args){//Character at position
      String str_Activity/* */= "RockStar";
System.out.println("Character at position 2: " + str_Activity.charAt(2));
//Index of a given character
System.out.println("Index of character 'S': " + str_Activity.indexOf('S'));}}


2. Create another class and methods that convert and return as ArrayList from
array data.

public class ArrayToArrayList {
     public static void main(String[] args) {

	  /* Array Declaration and initialization*/
	  String foodnames[]={"spagette", "salad makarone", "salad buko", "siomai"};

	  /*Array to ArrayList conversion*/
	  ArrayList<String> foodlist= new ArrayList<>(Arrays.asList(foodnames));

	  /*Adding new elements to the converted List*/
	  foodlist.add("our new food2");
	  foodlist.add("our new food3");

	  /*Final ArrayList content display using for*/
	  for (String str:foodlist)
	  {
		System.out.println(str);
       	  }
      }
}

             



E.EVALUATE
Self-Assessment.
Questions                                                           YES     -      NO         - MAYBE


1. Did I work hard on this module?                                  YES                    
2. Did I understand what my teacher asked me to do?                                             MAYBE
3. Did I spend enough time to finish answering this                 YES
module?                                                             
4. Did I make good use of available resources?                                                  MAYBE
5. Did I check/ review my work for possible errors?                 YES
6. Did I learn something in this module?                            YES
7. Did I ask questions if I needed help?                            YES
8. Did I read the instructions carefully?                           YES
9. Did I set high standards for myself?                                            NO
10. Did I meet the success criteria?                                                             MAYBE
